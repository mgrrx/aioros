from typing import overload

class Quaternion:
    def __init__(self, x: float, y: float, z: float, w: float) -> None: ...
    @property
    def x(self) -> float: ...
    @property
    def y(self) -> float: ...
    @property
    def z(self) -> float: ...
    @property
    def w(self) -> float: ...

class Vector3:
    def __init__(self, x: float, y: float, z: float) -> None: ...
    @property
    def x(self) -> float: ...
    @property
    def y(self) -> float: ...
    @property
    def z(self) -> float: ...

class Transform:
    def __init__(self, rotation: Quaternion, translation: Vector3) -> None: ...
    @property
    def rotation(self) -> Quaternion: ...
    @property
    def translation(self) -> Vector3: ...
    @overload
    def __matmul__(self, transform: "Transform") -> "Transform": ...
    @overload
    def __matmul__(self, point: Vector3) -> Vector3: ...
